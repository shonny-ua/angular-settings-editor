{"version":3,"sources":["/home/shonny/work/dev/angular-settings-editor/src/$_gendir lazy","/home/shonny/work/dev/angular-settings-editor/src/app/app-routing.module.ts","/home/shonny/work/dev/angular-settings-editor/src/app/app.component.css","/home/shonny/work/dev/angular-settings-editor/src/app/app.component.html","/home/shonny/work/dev/angular-settings-editor/src/app/app.component.ts","/home/shonny/work/dev/angular-settings-editor/src/app/app.module.ts","/home/shonny/work/dev/angular-settings-editor/src/app/lib/pipes/keyval.ts","/home/shonny/work/dev/angular-settings-editor/src/app/settings/editor-list/editor-list.component.css","/home/shonny/work/dev/angular-settings-editor/src/app/settings/editor-list/editor-list.component.html","/home/shonny/work/dev/angular-settings-editor/src/app/settings/editor-list/editor-list.component.ts","/home/shonny/work/dev/angular-settings-editor/src/app/settings/editor.ts","/home/shonny/work/dev/angular-settings-editor/src/app/settings/find-editor.pipe.ts","/home/shonny/work/dev/angular-settings-editor/src/app/settings/mock-meta.ts","/home/shonny/work/dev/angular-settings-editor/src/app/settings/mock-settings.ts","/home/shonny/work/dev/angular-settings-editor/src/app/settings/settings.component.css","/home/shonny/work/dev/angular-settings-editor/src/app/settings/settings.component.html","/home/shonny/work/dev/angular-settings-editor/src/app/settings/settings.component.ts","/home/shonny/work/dev/angular-settings-editor/src/app/settings/settings.service.ts","/home/shonny/work/dev/angular-settings-editor/src/environments/environment.ts","/home/shonny/work/dev/angular-settings-editor/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/shonny/work/dev/angular-settings-editor/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// import { IndexComponent } from './index/index.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { AppComponent } from './app.component';\n\n\nconst routes: Routes = [\n\t// { path: '', redirectTo: '/index', pathMatch: 'full' },\n  \t{ path: 'settings',  component: SettingsComponent }\n];\n\n@NgModule({\n\t  imports: [RouterModule.forRoot(routes)],\n\t  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/shonny/work/dev/angular-settings-editor/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/shonny/work/dev/angular-settings-editor/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<md-toolbar color=\\\"primary\\\">\\n  <button md-button routerLink=\\\"/settings\\\">\\n    <md-icon md-font-library=\\\"material-icons\\\">settings</md-icon>\\n    <span>SettingsEditor</span>\\n  </button>\\n</md-toolbar>\\n<router-outlet></router-outlet>\\n<!-- <h2>Here are some links to help you start: </h2>\\n<ul>\\n  <li>\\n    <h2><a target=\\\"_blank\\\" href=\\\"https://angular.io/tutorial\\\">Tour of Heroes</a></h2>\\n  </li>\\n  <li>\\n    <h2><a target=\\\"_blank\\\" href=\\\"https://github.com/angular/angular-cli/wiki\\\">CLI Documentation</a></h2>\\n  </li>\\n  <li>\\n    <h2><a target=\\\"_blank\\\" href=\\\"https://blog.angular.io//\\\">Angular blog</a></h2>\\n  </li>\\n  \\n</ul> -->\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/shonny/work/dev/angular-settings-editor/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/shonny/work/dev/angular-settings-editor/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }   from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MaterialModule } from '@angular/material';\nimport { MdInputModule } from '@angular/material';\n\nimport { KeyValPipe } from './lib/pipes/keyval';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { EditorListComponent } from './settings/editor-list/editor-list.component';\nimport { FindEditorPipe } from './settings/find-editor.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SettingsComponent,\n\n    EditorListComponent,\n\n    KeyValPipe,\n    FindEditorPipe\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    FormsModule,\n\n    MaterialModule,\n    MdInputModule\n  ],\n  providers: [ ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/shonny/work/dev/angular-settings-editor/src/app/app.module.ts","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({name: 'keyval'})\nexport class KeyValPipe implements PipeTransform {\n  transform(value, args:string[]) : any {\n    let keys = [];\n    for (let key in value) {\n      keys.push({key: key, value: value[key]});\n    }\n    return keys;\n    // return Object.keys(value);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /home/shonny/work/dev/angular-settings-editor/src/app/lib/pipes/keyval.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/shonny/work/dev/angular-settings-editor/src/app/settings/editor-list/editor-list.component.css\n// module id = ../../../../../src/app/settings/editor-list/editor-list.component.css\n// module chunks = main","module.exports = \"<md-select [placeholder]=\\\"editor.id\\\" [(ngModel)]=\\\"setting[key]\\\">\\n\\t<md-option *ngFor=\\\"let item of editor.items | keyval\\\" [value]=\\\"item.key\\\">\\n\\t\\t{{ item.value }}\\n\\t</md-option>\\n</md-select>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/shonny/work/dev/angular-settings-editor/src/app/settings/editor-list/editor-list.component.html\n// module id = ../../../../../src/app/settings/editor-list/editor-list.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Editor } from '../editor';\n\n\n@Component({\n  selector: 'editor-list',\n  templateUrl: './editor-list.component.html',\n  styleUrls: ['./editor-list.component.css']\n})\nexport class EditorListComponent implements OnInit {\n  @Input() editor: Editor;\n  @Input() setting: Object;\n  @Input() key: string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/shonny/work/dev/angular-settings-editor/src/app/settings/editor-list/editor-list.component.ts","export class Editor {\n  id: string;\n  dataType: string;\n  kind: string;\n  items: Object;\n  defVal: any;\n}\n\n\n// WEBPACK FOOTER //\n// /home/shonny/work/dev/angular-settings-editor/src/app/settings/editor.ts","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { Editor } from './editor';\n\n\n@Pipe({\n  name: 'findEditor'\n})\nexport class FindEditorPipe implements PipeTransform {\n\n  transform(value: Object, editors: Editor[]): any {\n    return editors.find(editor => (value == editor.id));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/shonny/work/dev/angular-settings-editor/src/app/settings/find-editor.pipe.ts","\nexport const META = {\n\teditors: [\n\t\t{\n\t\t\tid: \"LogLevelList\",\n\t\t\tdataType: \"int\",\n\t\t\tkind: \"list\",\n\t\t\titems: {\n\t\t\t\t\"1\": \"Info\",\n\t\t\t\t\"2\": \"Debug\",\n\t\t\t\t\"3\": \"Warning\",\n\t\t\t\t\"4\": \"Error\"\n\t\t\t},\n\t\t\tdefVal: \"1\"\n\t\t},\n\t\t{\n\t\t\tid: \"CountryList\",\n\t\t\tdataType: \"string\",\n\t\t\tkind: \"list\",\n\t\t\titems: {\n\t\t\t\t\"ua\": \"Ukraine\",\n\t\t\t\t\"uk\": \"United Kingdom\",\n\t\t\t\t\"us\": \"United States\",\n\t\t\t\t\"de\": \"Germany\"\n\t\t\t}\n\t\t}\n\t\n\t],\t\n\tgroups: [\n\t\t{\n\t\t\tid: \"subscriber\",\n\t\t\tcaption: \"Subscriber profile\",\n\t\t\titems: \n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tid: \"name\",\n\t\t\t\t\tcaption: \"Company name\",\n\t\t\t\t\tinfo: \"The name of subscriber’s company\",\n\t\t\t\t\tdataType: \"string\"\n\t\t\t\t},\t\t\t\t\n\t\t\t\t{ \n\t\t\t\t\tid: \"country\",\n\t\t\t\t\tcaption: \"Country\",\n\t\t\t\t\tdataType: \"string\",\n\t\t\t\t\teditor: \"CountryList\",\n\t\t\t\t\tdefVal: \"ua\"\n\t\t\t\t},\n\t\t\t\t{ \n\t\t\t\t\tid: \"receiveNotifications\",\n\t\t\t\t\tcaption: \"Receive notifications\",\n\t\t\t\t\tInfo: \"If turned on - this subscriber will receive notifications on the main account’s email address\",\n\t\t\t\t\tdataType: \"bool\",\n\t\t\t\t\tdefVal: \"true\"\n\t\t\t\t},\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\tid: \"email\",\n\t\t\tcaption: \"Email settings\",\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\tid: \"smtpHost\",\n\t\t\t\t\tcaption: \"SMTP Host Address\",\n\t\t\t\t\tdataType: \"string\"\n\t\t\t\t},\t\t\t\t\n\t\t\t\t{ \n\t\t\t\t\tid: \"smtpPort\",\n\t\t\t\t\tcaption: \"SMPT port\",\n\t\t\t\t\tdataType: \"int\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"smtpUsername\",\n\t\t\t\t\tcaption: \"SMTP Username\",\n\t\t\t\t\tdataType: \"string\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tid: \"smtpPassword\",\n\t\t\t\t\tcaption: \"SMTP Password\",\n\t\t\t\t\tdataType: \"string\",\n\t\t\t\t\teditor:\"password\" \t\t//built-in editor\n\t\t\t\t}\t\t\t\t\n\t\t\t]\n\t\t}\n\t]\n};\n\n\n// WEBPACK FOOTER //\n// /home/shonny/work/dev/angular-settings-editor/src/app/settings/mock-meta.ts","export const SETTINGS = {\n\t\"subscriber\" : {\n\t\t\"name\": \"Imena.UA\",\n\t\t\"country\": \"ua\",\n\t\t\"receiveNotifications\": true\n\t},\n\t\"email\": {\n\t\t\"smtpHost\": \"smtp.imena.ua\",\n\t\t\"smtpPort\": 25,\n\t\t\"smtpUsername\": \"vasya.pupkin\",\n\t\t\"smtpPassword\": \"password\"\n\t}\n};\n\n\n// WEBPACK FOOTER //\n// /home/shonny/work/dev/angular-settings-editor/src/app/settings/mock-settings.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".sub1 {\\n\\tmargin-left: 10px; \\n}\\n\\n.sub2 {\\n\\tmargin-left: 20px; \\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/shonny/work/dev/angular-settings-editor/src/app/settings/settings.component.css\n// module id = ../../../../../src/app/settings/settings.component.css\n// module chunks = main","module.exports = \"<div style=\\\"float: right;\\\"><p style=\\\"font-weight: bold;\\\">Settings:</p>\\n\\t<pre>{{ settings | json }}</pre>\\n<!-- \\t<div *ngFor=\\\"let setting of settings | keyval\\\">\\n\\t\\t<div class=\\\"sub1\\\">{{setting.key}}</div>\\n\\t\\t<div *ngFor=\\\"let setVal of setting.value | keyval\\\">\\n\\t\\t\\t<div class=\\\"sub2\\\">{{ setVal.key }} - {{ setVal.value }}</div>\\n\\t\\t</div>\\n\\t</div> -->\\n</div>\\n<div *ngIf=\\\"meta\\\">\\n<!-- \\t<div *ngFor=\\\"let editor of editors\\\">\\n\\t\\t<div>{{editor.id}}</div>\\n\\t\\t<div class=\\\"sub1\\\">{{editor.dataType}}</div>\\n\\t\\t<div class=\\\"sub1\\\">{{editor.kind}}</div>\\n\\t\\t<div *ngFor=\\\"let editorItem of editor.items | keyval\\\">\\n\\t\\t\\t<div class=\\\"sub1\\\">{{ editorItem.key }} - {{ editorItem.value }}</div>\\n\\t\\t</div>\\n\\t</div> -->\\n\\n\\t<div *ngFor=\\\"let group of groups\\\">\\n\\t\\t<h3>{{group.caption}}</h3>\\n\\t\\t<div *ngFor=\\\"let groupItem of group.items\\\">\\n\\t\\t\\t<div *ngIf=\\\"groupItem.editor\\\">\\n\\t\\t\\t\\t<div *ngIf=\\\"groupItem.editor | findEditor:editors as editor\\\">\\n\\t\\t\\t\\t\\t<div *ngIf=\\\"editor.kind == 'list'\\\">\\n\\t\\t\\t\\t\\t\\t<editor-list\\n\\t\\t\\t\\t\\t\\t\\t[editor]=\\\"editor\\\"\\n\\t\\t\\t\\t\\t\\t\\t[setting]=\\\"settings[group.id]\\\"\\n\\t\\t\\t\\t\\t\\t\\t[key]=\\\"groupItem.id\\\"\\n\\t\\t\\t\\t\\t\\t></editor-list>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div *ngIf=\\\"groupItem.editor == 'password'\\\">\\n\\t\\t\\t\\t\\t<md-form-field>\\n\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\tmdInput\\n\\t\\t\\t\\t\\t\\t\\ttype=\\\"password\\\"\\n\\t\\t\\t\\t\\t\\t\\t[placeholder]=\\\"groupItem.caption\\\"\\n\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"settings[group.id][groupItem.id]\\\" />\\n\\t\\t\\t\\t\\t</md-form-field>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t\\t<div *ngIf=\\\"!groupItem.editor\\\">\\n\\t\\t\\t\\t<div *ngIf=\\\"groupItem.dataType == 'string'\\\">\\n\\t\\t\\t\\t\\t<md-form-field>\\n\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\tmdInput\\n\\t\\t\\t\\t\\t\\t\\ttype=\\\"text\\\"\\n\\t\\t\\t\\t\\t\\t\\t[placeholder]=\\\"groupItem.caption\\\"\\n\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"settings[group.id][groupItem.id]\\\" />\\n\\t\\t\\t\\t\\t</md-form-field>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div *ngIf=\\\"groupItem.dataType == 'int'\\\">\\n\\t\\t\\t\\t\\t<md-form-field>\\n\\t\\t\\t\\t\\t\\t<input\\n\\t\\t\\t\\t\\t\\t\\tmdInput\\n\\t\\t\\t\\t\\t\\t\\ttype=\\\"number\\\"\\n\\t\\t\\t\\t\\t\\t\\t[placeholder]=\\\"groupItem.caption\\\"\\n\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"settings[group.id][groupItem.id]\\\" />\\n\\t\\t\\t\\t\\t</md-form-field>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div *ngIf=\\\"groupItem.dataType == 'bool'\\\" style=\\\"padding-top: 15px;\\\">\\n\\t\\t\\t\\t\\t<md-checkbox align=\\\"end\\\" [(ngModel)]=\\\"settings[group.id][groupItem.id]\\\">{{ groupItem.caption }}</md-checkbox>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n<!-- <div *ngFor=\\\"let group of meta.groups\\\">\\n\\t<div>{{group.id}}</div>\\n\\t<div class=\\\"sub1\\\">{{group.caption}}</div>\\n\\t<div *ngFor=\\\"let groupItem of group.items\\\">\\n\\t\\t<div class=\\\"sub1\\\">{{groupItem.id}}</div>\\n\\t\\t<div class=\\\"sub2\\\">{{groupItem.caption}}</div>\\n\\t\\t<div class=\\\"sub2\\\">{{groupItem.dataType}}</div>\\n\\t\\t<div class=\\\"sub2\\\">{{groupItem.defVal}}</div>\\n\\t</div>\\n</div> -->\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/shonny/work/dev/angular-settings-editor/src/app/settings/settings.component.html\n// module id = ../../../../../src/app/settings/settings.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport { SettingsService } from './settings.service';\n\nimport { Meta } from './meta';\nimport { Group } from './group';\nimport { Editor } from './editor';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css'],\n  providers: [SettingsService]\n})\nexport class SettingsComponent implements OnInit {\n  meta: Meta;\n  editors: Editor[];\n  groups: Group[];\n  settings: Object;\n\n\n  constructor(private settingsService: SettingsService) { }\n\n  ngOnInit(): void {\n  \tthis.getMeta();\n  \tthis.getSettings();\n  }\n\n  getMeta(): void {\n  \tthis.settingsService.getMeta().then(\n  \t\tmeta => {\n  \t\t\tthis.meta = meta;\n  \t\t\tthis.groups = meta.groups;\n  \t\t\tthis.editors = meta.editors;\n  \t\t}\n  \t);\n  }\n\n  getSettings(): void {\n  \tthis.settingsService.getSettings().then(settings => this.settings = settings);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/shonny/work/dev/angular-settings-editor/src/app/settings/settings.component.ts","import { Injectable } from '@angular/core';\n\nimport { Meta } from './meta';\nimport { Settings } from './settings';\n\nimport { META } from './mock-meta';\nimport { SETTINGS } from './mock-settings';\n\n@Injectable()\nexport class SettingsService {\n  constructor() { }\n\n  getMeta(): Promise<Meta> {\n  \treturn new Promise((resolve, reject) => {\n  \t\tresolve(META as Meta);\n  \t});\n  }\n\n  getSettings(): Promise<Settings> {\n  \treturn new Promise((resolve, reject) => {\n  \t\t// resolve(this.settings as Settings);\n  \t\tresolve(SETTINGS);\n  \t});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/shonny/work/dev/angular-settings-editor/src/app/settings/settings.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/shonny/work/dev/angular-settings-editor/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /home/shonny/work/dev/angular-settings-editor/src/main.ts"],"sourceRoot":"webpack:///"}